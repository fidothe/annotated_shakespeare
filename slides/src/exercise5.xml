<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://www.oasis-open.org/docbook/xml/5.0/rng/docbook.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<article xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
    <info>
        <title>Practical Web Applications: Exercise 5</title>
        <authorgroup>
            <author>
                <personname>
                    <firstname>Lauren</firstname>
                    <surname>Wood</surname>
                </personname>
                <affiliation>
                    <orgname>Textuality Services, Inc.</orgname>
                </affiliation>
            </author>
            <author>
                <personname>
                    <firstname>Matt</firstname>
                    <surname>Patterson</surname>
                </personname>
                <affiliation>
                    <orgname>Constituent Parts, Ltd.</orgname>
                </affiliation>
            </author>
            <author>
                <personname>
                    <firstname>Norman </firstname>
                    <surname>Walsh</surname>
                </personname>
                <affiliation>
                    <orgname>MarkLogic</orgname>
                </affiliation>
            </author>
            <author>
                <personname>
                    <firstname>Paul</firstname>
                    <surname>Downey</surname>
                </personname>
                <affiliation>
                    <orgname>GDS</orgname>
                </affiliation>
            </author>
        </authorgroup>
        <releaseinfo role="version">Version 1.0</releaseinfo>
        <legalnotice>
            <para>Alpha by first name</para>
        </legalnotice>
        <pubdate>2012-09-20</pubdate>
        <copyright>
            <year>2012</year>
            <holder>Lauren Wood, Matt Patterson, Norm Walsh, Paul Downey</holder>
        </copyright>
    </info>
    <simplesect>
        <title>Summary</title>
        <para> This set of exercises comes in a number of parts. First we'll look at adding a user
            model with authentication to our sample application, so you can restrict who's allowed
            to carry out certain actions. </para>
        <para>After that, we'll see what effect some common attacks have, and see how easy it is to
            protect against them. </para>
    </simplesect>
    <simplesect>
        <title>Setup</title>
        <para> Make sure you're up to date on the code we created in the last set of exercises. Go
            to your repository folder in a terminal window and type <command>git checkout
                session_four</command> to get all the code from session four. Copy this code, in the
            correct folders, across to your working folders. </para>
    </simplesect>
    <simplesect>
        <title>Steps part one</title>
        <orderedlist>
            <listitem>
                <para>First, we need to add some code for the <classname>user</classname>
                    class.</para>
                <programlisting language="ruby"><xi:include href="ex/session_five_user.rb" parse="text"/></programlisting>
            </listitem>
            <listitem>
                <para>And some related code for the <classname>credential</classname> class.</para>
                <programlisting language="ruby"><xi:include href="ex/session_five_credential.rb" parse="text"/></programlisting>
            </listitem>
            <listitem>
                <para>Add code to require these files in your
                        <filename>annotated_shakespeare.rb</filename> file, in the same list as the
                    other requirements.</para>
                <programlisting language="ruby">require 'user'
require 'credential'
require 'omniauth-browserid'
</programlisting>
            </listitem>
            <listitem>
                <para>We also need to enable sessions and the OmniAuth builder, so add the following
                    to the <classname>annotated_shakespeare</classname> class, after the <code>set
                        :public_folder</code> line:</para>
                <programlisting language="ruby">set :session_secret, "df207bff3e06bba635a9e4f334238801"
enable :sessions

# check whether need to add the OmniAuth builder here

# Support both GET and POST for OmniAuth callbacks
[:get, :post].each do |method|
  send(method, "/auth/:provider/callback") do
    if user = User.from_auth_provider(params[:provider], 
                             env['omniauth.auth']['uid'])
      destination = '/'
    else
      user = User.create_from_auth_provider(params[:provider], 
                                   env['omniauth.auth']['uid'])
      destination = '/profile'
    end
    puts env['omniauth.auth'].inspect
    session['user'] = user.id
    redirect to(destination)
  end
end</programlisting>
                <para>The puts line puts the omniauth information on the console so you can see
                    them; you won't keep this line in the final application.</para>
            </listitem>
            <listitem>
                <para>While we're at it, let's make sure the comments are attached to a particular
                    user. Add the following line after the property definitions in the
                        <filename>comment.rb</filename> file:</para>
                <programlisting language="ruby">belongs_to :user</programlisting>
            </listitem>
        </orderedlist>
    </simplesect>
    <simplesect>
        <title>Steps part two</title>
        <para>Now that we have a user model defined, we'll use BrowserID/Persona to outsource our
            authentication to.</para>
        <orderedlist>
            <listitem>
                <para>Add code to your <classname>annotated_shakespeare</classname> class to call
                    the OmniAuth builder for Persona. Put this code directly after the <code>enable
                        :sessions</code> line.</para>
                <programlisting language="ruby">use OmniAuth::Builder do
  provider :browser_id, 
           :verify_url => 'https://verifier.login.persona.org/verify'
end</programlisting>
            </listitem>
            <listitem>
                <para>Let's add a <function>helper</function> function to that same class, putting
                    this code after the GET/POST OmniAuth definitions: </para>
                <programlisting language="ruby">helpers do
  def current_user
    if session['user']
      @user ||= User.get(session['user'])
    end
  end
end
</programlisting>
            </listitem>
            <listitem>
                <para>Finally, let's add some useful URLs. Put this code anywhere in the list of URL
                    handler blocks in the <classname>annotated_shakespeare</classname> class.</para>
                <programlisting language="ruby">get '/profile' do
  halt 403 unless current_user
  erb :profile
end

post '/profile' do
  halt 403 unless current_user
  current_user.name = params[:name]
  current_user.save!
  redirect to('/')
end

get '/logout' do
  if current_user
    session.clear
    redirect to('logout')
  else
    erb :logout
  end
end
</programlisting>
            </listitem>
            <listitem>
                <para>Of course, we also have to add appropriate template files for these new URLs.
                    First, add the <filename>profile.erb</filename> file to the
                        <filename>views</filename> folder, with content</para>
                <programlisting language="ruby"><xi:include href="ex/session_five_profile.erb" parse="text"/></programlisting>
            </listitem>
            <listitem>
                <para>And add the <filename>logout.erb</filename> file to the
                        <filename>views</filename> folder, with content</para>
                <programlisting language="ruby"><xi:include href="ex/session_five_logout.erb" parse="text"/></programlisting>
            </listitem>
        </orderedlist>
    </simplesect>
    <simplesect>
        <title>Steps part three</title>
        <para>To save time, we've written the starting code for you. Get it from the repository
            using <command>git checkout session_five_a-with_csrf</command> in your repository
            folder, and copy the files to your working folder.</para>
    </simplesect>
</article>
