<?dbhtml pygments="true"?>
<slides xml:lang="en" xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink">
  <info>
    <title>Practical Web Applications</title>
    <subtitle>Session Three</subtitle>
    <!-- authors are alphabetical by first name (I get sick of being listed last all the time, 
so I always do this if I can) -->
    <authorgroup>
      <author>
        <personname>
          <firstname>Lauren</firstname>
          <surname>Wood</surname>
        </personname>
        <affiliation>
          <orgname>Textuality Services, Inc.</orgname>
        </affiliation>
      </author>
      <author>
        <personname>
          <firstname>Matt</firstname>
          <surname>Patterson</surname>
        </personname>
        <affiliation>
          <orgname>Constituent Parts, Ltd.</orgname>
        </affiliation>
      </author>
      <author>
        <personname>
          <firstname>Norman </firstname>
          <surname>Walsh</surname>
        </personname>
        <affiliation>
          <orgname>MarkLogic</orgname>
        </affiliation>
      </author>
      <author>
        <personname>
          <firstname>Paul</firstname>
          <surname>Downey</surname>
        </personname>
        <affiliation>
          <orgname>GDS</orgname>
        </affiliation>
      </author>
    </authorgroup>
    <releaseinfo role="version">Version 1.0</releaseinfo>
    <legalnotice>
      <para>Alpha by first name</para>
    </legalnotice>
    <pubdate>2012-09-20</pubdate>
    <copyright>
      <year>2012</year>
      <holder>Lauren Wood, Matt Patterson, Norm Walsh, Paul Downey</holder>
    </copyright>
  </info>
  <foilgroup>
    <title>Modelling Plays for our app</title>
    <foil>
      <title>The simplest possible Play &amp; Act objects</title>
      <para>After looking at it, the simplest useful data model probably looks like this:</para>
      <itemizedlist>
        <listitem>
          <para>The play</para>
          <itemizedlist>
            <listitem>
              <para>The title</para>
            </listitem>
            <listitem>
              <para>The author</para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>An act</para>
          <itemizedlist>
            <listitem>
              <para>Act number</para>
            </listitem>
            <listitem>
              <para>Title</para>
            </listitem>
            <listitem>
              <para>Act text</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>
    </foil>
    <foil>
      <title>As Ruby</title>
      <programlisting language="ruby"><xi:include href="ex/simplest_models.rb" parse="text"/></programlisting>
      <para><code>lib/play.rb</code></para>
    </foil>
  </foilgroup>
  <foilgroup>
    <title>Extracting data from the Play XML with Nokogiri</title>
    <foil>
      <title>Extracting the Play and Act titles</title>
      <para>Nokogiri provides with a Ruby API around the GNOME libxml2 library.</para>
      <para>The Ruby API is nice and easy to use:</para>
      <programlisting language="ruby"><xi:include href="ex/nokogiri-css_and_xpath_search.rb" parse="text"/></programlisting>
    </foil>
    <foil>
      <title>The Play object</title>
      <para>Let's revisit the Play class and actually extract the data</para>
      <programlisting language="ruby"><xi:include href="ex/nokogiri-play_with_title.rb" parse="text"/></programlisting>
      <para><code>lib/play.rb</code></para>
    </foil>
  </foilgroup>
  <foilgroup>
    <title>Generating HTML for an Act using XSLT</title>
    <foil>
      <title>Running an XSLT</title>
      <para>Nokogiri is also a wrapper around GNOME libxslt1.1.</para>
      <programlisting language="ruby"><xi:include href="ex/nokogiri-xslt.rb" parse="text"/></programlisting>
    </foil>
    <foil>
      <title>The Act object</title>
      <programlisting language="ruby"><xi:include href="ex/nokogiri-act_with_data.rb" parse="text"/></programlisting>
      <para><code>lib/act.rb</code></para>
    </foil>
  </foilgroup>
  <foilgroup>
    <title>Wiring everything together</title>
    <foil>
      <title>Generating a page listing Plays</title>
      <para>What do we need?</para>
      <itemizedlist>
        <listitem>
          <para>HTML template</para>
        </listitem>
        <listitem>
          <para>Ability to find all the Plays</para>
        </listitem>
      </itemizedlist>
    </foil>
    <foil>
      <title>HTML template</title>
      <programlisting language="erb"><xi:include href="ex/plays-index.erb" parse="text"/></programlisting>
      <para><code>views/index.erb</code></para>
    </foil>
    <foil>
      <title>Finding all the plays</title>
      <programlisting language="ruby"><xi:include href="ex/get-all-plays-controller.rb" parse="text"/></programlisting>
      <para><code>lib/annotated_shakespeare.rb</code></para>
      <programlisting language="ruby"><xi:include href="ex/get-all-plays-model.rb" parse="text"/></programlisting>
      <para><code>lib/play.rb</code></para>
    </foil>
    <foil>
      <title>Listing a Play's Acts</title>
      <para>What do we need?</para>
      <itemizedlist>
        <listitem>
          <para>Ability to generate a unique URL slug for a Play</para>
        </listitem>
        <listitem>
          <para>HTML template</para>
        </listitem>
        <listitem>
          <para>Ability to get a Play object</para>
        </listitem>
        <listitem>
          <para>Ability to work out what Acts a Play has</para>
        </listitem>
      </itemizedlist>
    </foil>
    <foil>
      <title>Generating a unique URL slug for a Play</title>
      <programlisting language="ruby"><xi:include href="ex/play-url_slug.rb" parse="text"/></programlisting>
      <para><code>lib/play.rb</code></para>
    </foil>
    <foil>
      <title>HTML template</title>
      <programlisting language="erb"><xi:include href="ex/play-show.erb" parse="text"/></programlisting>
      <para><code>views/play_index.erb</code></para>
    </foil>
    <foil>
      <title>Getting a Play</title>
      <programlisting language="ruby"><xi:include href="ex/get-play-model.rb" parse="text"/></programlisting>
    </foil>
    <foil>
      <title>What Acts does a Play have?</title>
      <programlisting language="ruby"><xi:include href="ex/play-get-acts-model.rb" parse="text"/></programlisting>
    </foil>
    <foil>
      <title>Showing a whole Act</title>
      <para>What do we need?</para>
      <itemizedlist>
        <listitem>
          <para>HTML template</para>
        </listitem>
        <listitem>
          <para>Ability to get an Act object</para>
        </listitem>
      </itemizedlist>
    </foil>
    <foil>
      <title>HTML template</title>
      <programlisting language="erb"><xi:include href="ex/act-show.erb" parse="text"/></programlisting>
      <para><code>views/show.erb</code></para>
    </foil>
    <foil>
      <title>Getting an Act</title>
      <programlisting language="ruby"><xi:include href="ex/get-act-controller.rb" parse="text"/></programlisting>
      <para><code>lib/annotated_shakespeare.rb</code></para>
    </foil>
  </foilgroup>
</slides>

